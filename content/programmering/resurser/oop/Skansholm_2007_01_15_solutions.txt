     // Lösningar 2007-01-15
     
     // Uppgift 1
     
     a) Före rad 10: Metoden ät() definieras inte i klassen Äpple
        Man måste ha med en definition av denna metod.
     
     b) Rad 20: Defaultkonstruktor saknas i klassen Gurka. Den anropas automatiskt från
        konstruktorn i subklassen Saltgurka. 
        Den bästa lösningen är att i klassen Saltgurka ersätta rad 20
        med ett anrop av konstruktorn i klassen Gurka:
          super(n);
     
     c) Rad 35: Man försöker överlagra metoden bredd(), men detta är inte tillåtet eftersom
        de två versionerna har samma parameterlista. (Det räcker inte att returtyperna är olika.)
        Den bästa lösningen här är nog att bara ha ett interface, DörrEllerFönster, 
        vilket innehåller en enda version av metoden bredd().
     
     
     // Uppgift 2
     
     public class Complex {
       private static final double epsilon = 1e-15;
     
       private double re, im;
     
       public Complex() {}
     
       public Complex(Complex z) {
         this(z.re, z.im);
       }
     
       public Complex(double rr, double ii) {
         re = rr;
         im = ii;
       }
     
       public double getRe() {
         return re;
       }
     
       public double getIm() {
         return im;
       }
     
       public void add(Complex z) {
         re=re + z.re;
         im=im + z.im;
       }
      
       public void mult(Complex z) {
         re = re*z.re - im*z.im;
         im = re*z.im + im*z.re;
       }
     
       public boolean equals(Complex z) {
         return Math.abs(re-z.re)<epsilon && Math.abs(im-z.im)<epsilon;
       }
      
       public String toString() {
         if (im >= 0)
           return re + "+" + im + "*i";
         else 
           return re + "" + im + "*i";
       }
     }
     
     
     // Uppgift 3
     
     import java.io.*;
     import java.util.*;
     
     public class Tentaresultat {
     
       public static void main(String[] arg) throws java.io.IOException {
         String s = arg[0];
         String suffix = "";
         BufferedReader infil = new BufferedReader(new FileReader(s));
         int i = s.lastIndexOf('.');
         if (i >=0) {
           s  = arg[0].substring(0,i);
           suffix = arg[0].substring(i);
         }
         String[] namn = {s+'u'+suffix, s+'3'+suffix, s+'4'+suffix, s+'5'+suffix};
         PrintWriter[] fil = new PrintWriter[4];
         for (int j=0; j<fil.length; j++)
           fil[j] = new PrintWriter(new BufferedWriter(new FileWriter(namn[j])));
         while (true) {
           s = infil.readLine();
           if (s==null)
             break;
           Scanner sc = new Scanner(s);
           for (int k=1; k<=3; k++)
             sc.next();
           int summa = 0;
           for (int k=1; k<=6; k++)
             summa += sc.nextInt();
           int filnr = 0;
           if (summa >= 24 && summa < 36)
             filnr = 1;
           else if (summa >= 36 && summa < 48)
             filnr = 2;
           else if (summa >= 48)
             filnr = 3;
           fil[filnr].println(s + " " + summa);
         }
         infil.close();
         for (int j=0; j<fil.length; j++)
           fil[j].close();
       }
     }
     
     
     // Uppgift 4
     
     import java.awt.*;
     import java.awt.event.*;
     import javax.swing.*;
     public class Tangentbord extends JFrame implements ActionListener {
       private final String[] b = {"1", "2", "3", "4", "5", "6", "7", "8", "9",
                                   "0", "+", "Q", "W", "E", "R", "T", "Y", "U",
                                   "I", "O", "P", "Å", "A", "S", "D", "F", "G",
                                   "H", "J", "K", "L", "Ö", "Ä", "Z", "X", "C",
                                   "V", "B", "N", "M", ",", ".", "-"};
       private JLabel output = new JLabel(" ");
     
       public Tangentbord() {
         add(output, BorderLayout.NORTH);
         JPanel buttons = new JPanel(new GridLayout(4, 11));
         for (int i = 0; i < b.length; i++) {
           JButton tmp = new JButton(b[i]);
           tmp.addActionListener(this);
           buttons.add(tmp);
         }
         add(buttons, BorderLayout.CENTER);
         JButton tmp = new JButton(" ");
         tmp.addActionListener(this);
         add(tmp, BorderLayout.SOUTH);
         pack();
         setDefaultCloseOperation(EXIT_ON_CLOSE); 
         setVisible(true);
       }
     
       public void actionPerformed(ActionEvent e) {
         JButton jb = (JButton) e.getSource();
         output.setText(output.getText() + jb.getText());
       }
     
       public static void main(String[] arg) {
         new Tangentbord();
       }
     }
     
     
     // Uppgift 5
     
     public class AnagramKlass {
     
       public static boolean ärAnagram(String s1, String s2) {
         s1 = blankaBort(s1);
         s2 = blankaBort(s2);
         if (s1.length() != s2.length())
           return false;
         s1 = s1.toLowerCase();
         s2 = s2.toLowerCase();
         for (int i=0; i<s1.length(); i++)
           if (antal(s1, s1.charAt(i)) != antal(s2, s1.charAt(i)))
             return false;
         return true;
       }
     
       public static String blankaBort(String s) {
         String r = "";
         for (int i=0; i<s.length(); i++)
           if (s.charAt(i) != ' ')
             r = r + s.charAt(i);
         return r;
       }
     
       public static int antal (String s, char c) {
         int n = 0;
         for (int i=0; i<s.length(); i++) 
           if (s.charAt(i)== c)
             n++;
         return n;
       }
     }
     
     // Uppgift 6
     
     public class Stat {
     
     public static double[] statistik(double[] x, int n) {
       double sum = 0, kvadsum = 0;
       double[] res = new double[2];
       for (int i=0; i<n; i++) 
       {
         sum += x[i];
         kvadsum += x[i] * x[i];
       }
       res[0] = sum / n;
       res[1] = Math.sqrt((kvadsum-sum*sum / n)/(n-1));
       return res;
     }
     
       public static void main(String[] arg) {
         double[] a = {1, 2, 3, 0, 0, 0, 0,};
         int k = 3;
         // exempel på anrop
         double[] r = statistik(a, k);
         System.out.println(r[0]);
         System.out.println(r[1]);
       }
     }
     
