#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.

#route '/2012/op/erfarna/pass6/' do
  #'/index.html'
#end
#

#route '/' do
  #nil
#end

preprocess do
  def create_parents(item)
    identifier = item.identifier.sub(/[^\/]+\/$/, '')
    if !(@items.find { |i| i.identifier == identifier }) && !/assets/.match(item.identifier)
      title = (identifier.split("/").last && identifier.split("/").last.capitalize.gsub("_", " ")) || "/"
      title = 'si.chalmers.it' if title == '/'
      parent = Item.new(" ", {:title => title}, identifier)
      parent[:is_directory] = true
      @items << parent
      create_parents(parent)
    end
  end

  @items.each do |i|
    create_parents(i)
  end

  @items.each do |i|
    if i.binary? 
      i[:title] = i.raw_filename.split("/").last
    elsif i[:extension] == 'java' || i[:extension] == 'txt'
      i[:title] = i[:filename].split("/").last
    end
    if i[:extension] == 'md'
      title = i.raw_content.split("\n").first
      subtitle = title.split(":")[1]
      subtitle = subtitle.strip if subtitle
      title = title.split(":").first.strip
      i[:title] = title
      i[:subtitle] = subtitle
    end
  end

end

compile '/assets/*' do

end

route '/assets/*' do
  item.identifier.chop + '.' + item[:extension]
end

# Sheets
# /year/subject/index/sheet/

compile '*' do
  if item[:extension] == 'md'
    filter :maruku
    filter :prettyprint
    layout 'exercise'
  elsif item[:extension] == 'java'
    layout 'code'
  elsif item[:extension] == 'txt'
    layout 'text'
  elsif !item.binary?
    layout 'directory'
  end
end

# Directory pages
#compile '*' do
  #layout 'directory'
#end


route '*' do
  if item.binary?
    item.identifier.chop + '.' + item[:extension]
  else
    item.identifier + 'index.html'
  end
end

layout '*', :slim
